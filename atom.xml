<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[关注人工智能]]></title>
  <link href="http://whomake.me/atom.xml" rel="self"/>
  <link href="http://whomake.me/"/>
  <updated>2013-04-21T21:29:16+08:00</updated>
  <id>http://whomake.me/</id>
  <author>
    <name><![CDATA[AI亮子]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A simple way to Use Elisp to implement Genetic Algorithm about [Traveling Saleman Problem]]]></title>
    <link href="http://whomake.me/blog/2013/04/21/a-simple-way-to-use-elisp-to-implement-genetic-algorithm/"/>
    <updated>2013-04-21T21:21:00+08:00</updated>
    <id>http://whomake.me/blog/2013/04/21/a-simple-way-to-use-elisp-to-implement-genetic-algorithm</id>
    <content type="html"><![CDATA[<p>Here is a very simple implementation way to simulate Genetic Algorithm.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>;define points
</span><span class='line'>(setq env `((1.0 1.0) (2.0 7.0) (2.0 6.0) (2.0 4.0) (3.0 2.0) (5.0 8.0) (7.0 7.0 ) (7.0 4.0 ) ( 7.0 1.0 )))
</span><span class='line'>
</span><span class='line'>(setf ways `())
</span><span class='line'>(setf currentways `())
</span><span class='line'>(setf number_population 60)
</span><span class='line'>(setf better_population 30)
</span><span class='line'>(setf child_population 30)
</span><span class='line'>
</span><span class='line'>;get Random Way to fill the ways.
</span><span class='line'>(defun getRandomWay()
</span><span class='line'>  (let ((ret) (tempenv) (num 1))
</span><span class='line'>    (setf tempenv (copy-sequence env))
</span><span class='line'>    (while (&gt; (length tempenv) 0)
</span><span class='line'>      (setf num (1+ num))
</span><span class='line'>      (let ((element))
</span><span class='line'>  (setf element (elt tempenv (random (length tempenv))))
</span><span class='line'>  (push element ret)
</span><span class='line'>  (setf tempenv (delete element tempenv)))
</span><span class='line'>      )
</span><span class='line'>    ret
</span><span class='line'>    )
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'>;basic method
</span><span class='line'>(defun getTwoPointLength(a b)
</span><span class='line'>  (sqrt (+ (expt (- (car a) (car b)) 2) (expt (- (cadr a) (cadr b)) 2)))
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'>;caculate the way's length
</span><span class='line'>(defun caculateLength(way)
</span><span class='line'>  (let ((i 0) (ret 0.0))
</span><span class='line'>    ;(message "way is : %s" way)
</span><span class='line'>    (while (&lt; i (1- (length way)))
</span><span class='line'>      ;(message "here ele1:%s ele2:%s" (elt way i) (elt way (1+ i)))
</span><span class='line'>      (setq ret (+ ret (getTwoPointLength (elt way i) (elt way (1+ i)))))
</span><span class='line'>      ;(message "here: %f" ret)
</span><span class='line'>      (setq i (+ i 1))
</span><span class='line'>      )
</span><span class='line'>    ret
</span><span class='line'>    )
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'>; use Tournament to get the next generation.
</span><span class='line'>(defun getRandomTwo(population)
</span><span class='line'>  (let ((tempways population) (ret) (temp1) (temp2))
</span><span class='line'>    (setq temp1 (elt tempways (random (length tempways))))
</span><span class='line'>    (setq tempways (delete temp1 tempways))
</span><span class='line'>    (setq temp2 (elt tempways (random (length tempways))))
</span><span class='line'>    (push temp1 ret)
</span><span class='line'>    (push temp2 ret)
</span><span class='line'>    ret)
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'>; exchange a gene in way a and b at position pos.
</span><span class='line'>(defun exchangeGene(a b pos)
</span><span class='line'>  "exchange gene at pos in a , b"
</span><span class='line'>  (let ((temp1) (temp2) (ret `()))
</span><span class='line'>    ;(message "a:%s b:%s pos:%d" a b pos)
</span><span class='line'>    (setq temp1 (elt a pos))
</span><span class='line'>    (setq temp2 (elt b pos))
</span><span class='line'>    (setq a (mapcar (lambda (a1) (cond ((equal a1 temp2) (setq a1 temp1)) (t a1))) a))
</span><span class='line'>    (setq b (mapcar (lambda (b1) (cond ((equal b1 temp1) (setq b1 temp2)) (t b1))) b))
</span><span class='line'>    (setcar (nthcdr pos a) temp2)
</span><span class='line'>    (setcar (nthcdr pos b) temp1)
</span><span class='line'>    (list a b)
</span><span class='line'>    )
</span><span class='line'>  )
</span><span class='line'>
</span><span class='line'>;make childrens. 
</span><span class='line'>(defun coitus (a b)
</span><span class='line'>  "a b is format of ((1.0 1.0){9})"
</span><span class='line'>  (let ((currentpos 0)(tempab))
</span><span class='line'>    (while (&lt; currentpos (length a))
</span><span class='line'>      (if (= (random 2) 0)
</span><span class='line'>    ;exchange gene
</span><span class='line'>    (progn (setq tempab (exchangeGene a b currentpos))
</span><span class='line'>       (setf a (car tempab))
</span><span class='line'>       (setf b (cadr tempab))
</span><span class='line'>       )
</span><span class='line'>  )
</span><span class='line'>      (setq currentpos (1+ currentpos))
</span><span class='line'>      )
</span><span class='line'>    (list a b)
</span><span class='line'>    )
</span><span class='line'>  )
</span><span class='line'>
</span><span class='line'>;get new evolution ways 
</span><span class='line'>(defun evolve_one_generation()
</span><span class='line'>  (setq currentways `())
</span><span class='line'>  (setq ways `())
</span><span class='line'>  (while (&lt; (length ways) number_population)
</span><span class='line'>    (push (getRandomWay) ways))
</span><span class='line'>  (let ((randomTwo) (coitusways `()) (children))
</span><span class='line'>  (while (&lt; (length currentways) better_population)
</span><span class='line'>    (setq randomTwo (getRandomTwo ways))
</span><span class='line'>    (cond ((&lt;= (caculateLength (car randomTwo)) (caculateLength (cadr randomTwo))) (push (car randomTwo) currentways))
</span><span class='line'>    (t (push (cadr randomTwo) currentways))
</span><span class='line'>    )
</span><span class='line'>    )
</span><span class='line'>  (setq ways `())
</span><span class='line'>  (mapcar (lambda (a) (setq ways(cons a ways))) currentways)
</span><span class='line'>  ;(message "current ways length1:%d" (length ways))
</span><span class='line'> 
</span><span class='line'>  (while (&lt; (length coitusways)  child_population)
</span><span class='line'>    (setq randomTwo (getRandomTwo currentways))
</span><span class='line'>    ;(message "random2: %s" randomTwo)
</span><span class='line'>    (setq children (coitus (car randomTwo) (cadr randomTwo)))
</span><span class='line'>    ;(message "children: %s" children)
</span><span class='line'>    (push (car children) coitusways)
</span><span class='line'>    (push (cadr children) coitusways)
</span><span class='line'>    (setq ways (cons (car children) ways))
</span><span class='line'>    (setq ways (cons (cadr children) ways))
</span><span class='line'>    )
</span><span class='line'>  ;(setq ways (append ways currentways coitusways))
</span><span class='line'>  ;(message "coitus ways: %d" (length coitusways))
</span><span class='line'>  ;(message "coitus ways: %s" coitusways)
</span><span class='line'>  ;(message "current ways length: %d" (length ways))
</span><span class='line'>  ;(message "ways %s" ways)
</span><span class='line'>  )
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'>(defun evolve()
</span><span class='line'>  (let ((generation 0)(templength)(currentBestWay `())(currentLestLength -1.0))
</span><span class='line'>    (while (&lt; generation 1000)
</span><span class='line'>      (evolve_one_generation)
</span><span class='line'>      (mapcar (lambda (a) 
</span><span class='line'>      ( setq templength (caculateLength a))
</span><span class='line'>
</span><span class='line'>      (cond ((equal currentLestLength -1.0) 
</span><span class='line'>             (setq currentLestLength templength)
</span><span class='line'>             (setq currentBestWay a)
</span><span class='line'>             )
</span><span class='line'>            ((&lt; templength currentLestLength)
</span><span class='line'>             (setq currentLestLength templength)
</span><span class='line'>             (setq currentBestWay a)
</span><span class='line'>             )
</span><span class='line'>            (t nil)))
</span><span class='line'>        ways)
</span><span class='line'>      (setq generation (1+ generation))
</span><span class='line'>      (message "current Best Way: %s, current lest length:%f" currentBestWay currentLestLength)
</span><span class='line'>      )
</span><span class='line'>    (message "Best Way: %s, The length is:%f" currentBestWay currentLestLength)
</span><span class='line'>    )
</span><span class='line'>  )
</span><span class='line'>
</span><span class='line'>(evolve)
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搜索www.iciba.com的Alfred workflow脚本,英汉互译,可自动提示]]></title>
    <link href="http://whomake.me/blog/2013/04/07/sou-suo-www-dot-iciba-dot-comde-alfred-workflowjiao-ben/"/>
    <updated>2013-04-07T13:09:00+08:00</updated>
    <id>http://whomake.me/blog/2013/04/07/sou-suo-www-dot-iciba-dot-comde-alfred-workflowjiao-ben</id>
    <content type="html"><![CDATA[<p>对于未来以流信息存在的网络来看, Alfred的前途不可限量.
mac官方自带的翻译实在使用起来麻烦.这个workflow是利用了www.iciba.com进行的搜索结果提示. 效果图如下:
<img src="http://file.honeybay.com.s3.amazonaws.com/qianxun/blog/ciba_test.png" alt="image" /></p>

<p>具体脚本下载:
<a href="http://file.honeybay.com.s3.amazonaws.com/qianxun/blog/searchiciba.alfredworkflow">Mac workflow Download</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Couponic 电商网站添加Custom Payment Gateway的方法]]></title>
    <link href="http://whomake.me/blog/2013/03/28/couponic-dian-shang-wang-zhan-tian-jia-custom-payment-gatewayde-fang-fa/"/>
    <updated>2013-03-28T16:07:00+08:00</updated>
    <id>http://whomake.me/blog/2013/03/28/couponic-dian-shang-wang-zhan-tian-jia-custom-payment-gatewayde-fang-fa</id>
    <content type="html"><![CDATA[<p>以下以手工添加enets payment gateway 到<a href="http://www.honeybay.com">Honeybay</a> 作为事例.
打开:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>protected/modules/payment/modules/gateway/components/Gateway.php  </span></code></pre></td></tr></table></div></figure>


<h1>1. <strong>修改charge方法</strong></h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public function charge($data)
</span><span class='line'>{
</span><span class='line'>  $form = '&lt;form name="cart" action="https://www.enets.sg/enets2/enps.do" method="post" id="gatewayPaymentForm" style="display:none"&gt;
</span><span class='line'>      &lt;input type="hidden" name="amount" value="'.sprintf('%.2f',$data['amount']).'"&gt; 
</span><span class='line'>      &lt;input type="hidden" name="txnRef" value="'.$data['orderId'].'-'.uniqid().'"&gt; 
</span><span class='line'>      &lt;input type="hidden" name="mid" value="YOUR_MID"&gt; 
</span><span class='line'>      &lt;input type="hidden" name="umapiType" value="lite"&gt;
</span><span class='line'>      &lt;input type="submit" name="submit" value="" id="gatewayPaymentFormSubmit"&gt;
</span><span class='line'>  &lt;/form&gt;';                                               
</span><span class='line'>  $form.= CHtml::script('jQuery("#gatewayPaymentFormSubmit").click();');
</span><span class='line'>  return array('status' =&gt; true, 'form' =&gt; $form);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>这个$data为paymentcart传递过来的order相关的数据,我post如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>data
</span><span class='line'>array(5) {
</span><span class='line'>  ["params"]=&gt;
</span><span class='line'>  object(CAttributeCollection)#186 (5) {
</span><span class='line'>    ["caseSensitive"]=&gt;
</span><span class='line'>    bool(true)
</span><span class='line'>    ["_d":"CMap":private]=&gt;
</span><span class='line'>    array(8) {
</span><span class='line'>      ["version"]=&gt;
</span><span class='line'>      string(5) "1.0.0"
</span><span class='line'>      ["name"]=&gt;
</span><span class='line'>      string(5) "Enets"
</span><span class='line'>      ["test"]=&gt;
</span><span class='line'>      string(1) "0"
</span><span class='line'>      ["canAuthorize"]=&gt;
</span><span class='line'>      string(0) ""
</span><span class='line'>      ["canVoid"]=&gt;
</span><span class='line'>      string(0) ""
</span><span class='line'>      ["canRefund"]=&gt;
</span><span class='line'>      string(0) ""
</span><span class='line'>      ["canDirect"]=&gt;
</span><span class='line'>      string(0) ""
</span><span class='line'>      ["cconly"]=&gt;
</span><span class='line'>      string(1) "0"
</span><span class='line'>    }
</span><span class='line'>    ["_r":"CMap":private]=&gt;
</span><span class='line'>    bool(false)
</span><span class='line'>    ["_e":"CComponent":private]=&gt;
</span><span class='line'>    NULL
</span><span class='line'>    ["_m":"CComponent":private]=&gt;
</span><span class='line'>    NULL
</span><span class='line'>  }
</span><span class='line'>  ["currency"]=&gt;
</span><span class='line'>  string(3) "SGD"
</span><span class='line'>  ["cart"]=&gt;
</span><span class='line'>  array(1) {
</span><span class='line'>    [0]=&gt;
</span><span class='line'>    array(3) {
</span><span class='line'>      ["name"]=&gt;
</span><span class='line'>      string(31) "Special+Today-Philips+Air+Fryer"
</span><span class='line'>      ["amount"]=&gt;
</span><span class='line'>      string(2) "45"
</span><span class='line'>      ["quantity"]=&gt;
</span><span class='line'>      int(1)
</span><span class='line'>    }
</span><span class='line'>  }
</span><span class='line'>  ["amount"]=&gt;
</span><span class='line'>  int(45)
</span><span class='line'>  ["orderId"]=&gt;
</span><span class='line'>  string(4) "1709"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>有需要什么的就提取什么发送给payment url.</p>

<h1>2. <strong>从payment的反馈.</strong></h1>

<p>一般你会在payment gateway那里定义一个返回的success or failure的url, 你可以在couponic的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>protected/config/public/instance.php</span></code></pre></td></tr></table></div></figure>


<p>这里来添加自定义url
我的是:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> 'payment/enets/success' =&gt; 'payment/gateway/ipn',</span></code></pre></td></tr></table></div></figure>


<p>ipn文件的位置是</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>protected/modules/payment/modules/gateway/worklets/WPaymentGatewayIpn.php</span></code></pre></td></tr></table></div></figure>


<p>如果需要加入什么可以在这里进行修改.很庆幸的是,我这边不需要做任何修改.
请注意这一行:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$r = $g-&gt;validate(array(
</span><span class='line'>      'params' =&gt; $this-&gt;module-&gt;params,
</span><span class='line'>  ));</span></code></pre></td></tr></table></div></figure>


<p>    <br/>
但是ipn文件是要从Gateway.php的validate方法里面获得相关的参数,
让我们打开:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>protected/modules/payment/modules/gateway/components/Gateway.php  </span></code></pre></td></tr></table></div></figure>


<p>修改里面的validate()方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public function validate()
</span><span class='line'>{                       
</span><span class='line'>  $status = $_GET['status'];
</span><span class='line'>  $retArray = array();      
</span><span class='line'>  $retArray['status'] = strtolower($status) == 'succ'? true:false;
</span><span class='line'>  $retArray['type'] = 'charge';
</span><span class='line'>  $retArray['orderId'] = xxx;//it's from your payment gateway callback
</span><span class='line'>  $retArray['gatewayId'] = $_GET['txnRef'];
</span><span class='line'>  $retArray['after'] = 'redirect';
</span><span class='line'>  $retArray['redirectUrl'] = aUrl('/payment/success',array('id' =&gt; $pieces[0]));
</span><span class='line'>  return $retArray;
</span><span class='line'>} </span></code></pre></td></tr></table></div></figure>


<p></p>

<h1>3. <strong>最后,需要添加Custom Payment Gateway到支付的可选菜单里面.</strong></h1>

<p>在后台Admin setup里面
Custom Payment Gateway里面勾选
Gateway and standalone payment method</p>

<p><strong>大功告成</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google宣布收购一家专注于神经网络研究的初创公司]]></title>
    <link href="http://whomake.me/blog/2013/03/18/googlexuan-bu-shou-gou-%5B%3F%5D-jia-zhuan-zhu-yu-shen-jing-wang-luo-yan-jiu-de-chu-chuang-gong-si/"/>
    <updated>2013-03-18T14:42:00+08:00</updated>
    <id>http://whomake.me/blog/2013/03/18/googlexuan-bu-shou-gou-[?]-jia-zhuan-zhu-yu-shen-jing-wang-luo-yan-jiu-de-chu-chuang-gong-si</id>
    <content type="html"><![CDATA[<p>谷歌向来都是一家会不断吸收具有前景的初创公司，进而不断地加大其在互联网服务基础设施的实力。据外媒报道，谷歌又在这周收购了DNNreasearch Inc.。神经网络&#8211;人工智能计算是一种模仿动物大脑神经的数学算法。它出现于20世纪40年代，在50年代得到了研究人员的注意，并在60年代开始运用到计算设备中。</p>

<p>不过，这种技术在数字时代初期却遭到了人们的冷落。到了20世纪80年代末，由于研究人员发现了<a href="http://en.wikipedia.org/wiki/Backpropagation">反向传播 (Backpropogation)</a>算法，神经网络技术又重新绽放光芒。</p>

<p>DNNreasearch就是一家深度研究神经网络的初创公司，它由来自多伦多大学计算机科学系的教授Geoffrey Hinton以及他的两位研究生学生Alex Krizhevsky和Ilya Sutskever联合创办，他们主要将精力集中在物体识别的研究上。</p>

<p>谷歌之所以收购了这家初创公司，则是希望可以将他们成熟的神经网络技术运用到公司的图片搜索中。据悉，谷歌已经在数字图片抽象元素的识别中使用了多种人工智能技术，他们甚至还考虑过使用量子计算机来完成这一项工作。</p>

<p>另外，谷歌介绍，DNNreasearch的技术除了可以运用到图片搜索之外，还可以在音频文件搜索中得到很好的利用。</p>

<p>谷歌并没有对外公司收购DNNreasearch的价格，不过它倒是透露了公司已经给Hinton教授提供了$60万的研究资金。现在，Hinton教授则要不断地穿梭在多伦多大学和谷歌总部之间继续他的研究工作。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Conway的生命游戏mac实现]]></title>
    <link href="http://whomake.me/blog/2013/03/17/conwayde-sheng-ming-you-xi-macshi-xian/"/>
    <updated>2013-03-17T22:52:00+08:00</updated>
    <id>http://whomake.me/blog/2013/03/17/conwayde-sheng-ming-you-xi-macshi-xian</id>
    <content type="html"><![CDATA[<p><a href="http://zh.wikipedia.org/wiki/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F">生命游戏介绍</a><br/>
代码的下载地址: <a href="https://github.com/heack/simulate-2D-world-game-of-life">小亮的Github</a></p>

<h1>小亮观点</h1>

<p>康威的细胞自动机,在很大程度上,很有可能是现在弦理论的一个二维简版.根据国外科学家的研究,如果要在三维世界中形成类似于人这样复杂的生命体的话,那么需要非常复杂的规则.就像弦一样,不同的震动形成不同的粒子表现.那么,有以下的问题很值得思考:<br/>
1. 规则是一开始就定下来的,还是规则也有一种类似于自然选择的机制.这就像我们的物理理论是固定的还是可能是变化的,甚至是为了产生生命体而不断的进行自然选择.比如万有引力的常数,如果太大,可能宇宙最终会坍缩,如果太小,又会太寂寞.那么为什么恰好是这个参数呢?有人说正好我们在这里,所以正好是这个参数.我认为,假若上帝真正存在的话,假若他是一个哪有那么多的功夫去生成这么多的宇宙,来研究这个参数那个参数恰好是多少啊?!假若上帝也是一个程序员,我们是在一个虚拟的世界当中,那么模拟我们的这个宇宙,模拟出一个可以有生命的宇宙,那调整各种参数,也是很耗费时间的.再说,上帝这么做的意义何在?<br/>
2. 爱因斯坦说过他不相信上帝是掷色子的.我相信.物理定律必然有其随机的一面.否则上帝未免会觉得这个世界太无聊了一点,因为他对未来都知道了嘛!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[机器人的云智慧]]></title>
    <link href="http://whomake.me/blog/2013/03/16/ji-qi-ren-de-mo-wei-wang/"/>
    <updated>2013-03-16T23:13:00+08:00</updated>
    <id>http://whomake.me/blog/2013/03/16/ji-qi-ren-de-mo-wei-wang</id>
    <content type="html"><![CDATA[<p>欧洲的科学家们刚刚推出了Raptuya——一个帮助机器人应付人类世界的在线信息数据库。Raptura数据库作为&#8221;机器人的万维网&#8221;，也是&#8221;欧洲机器人地球项目&#8221;(European RoboEarth Project)的一部分。该项目旨在让机器人可以下载互联网上的信息，以学习它们的环境(environment)、软件组件(software components)、对象(objects)、图像(images)，以及如何执行某些任务。</p>

<p>Raptuya的推出是RoboEarth项目的第一步。在Ratuya的帮助下，机器人无需单独地学习如何处理对象和情境。通过在云端网络下载必要的信息，Raptuya将有助于加快这个过程。Raptuya也可以帮助机器人做运算，这样就可以轻松地解决周边导航、执行任务和识别语言的问题。</p>

<p>科学家们希望该在线数据库可以降低机器人的成本(因为对板载存储和计算量的需求都更少了)。Raptuya数据库的信息有两类提供者——人们为机器人创建信息；而机器人也可以上传它们的信息。所有的信息皆为机器可读的格式(a machine-readable format)，对&#8221;机器人&#8221;来说，&#8221;通俗易懂&#8221;。</p>

<p>RoboEarth设计为机器人创新引路，对无人飞机和自动驾驶汽车来说，其也将证明它的用处。牛津大学的科学家们正在为他们的自动驾驶汽车系统，寻找一种通过互联网，下载环境信息的方法。看起来，他们应该有答案了。</p>

<p>随着移动机器人侍者的价格变得更加实惠(以及有能力识别更生活化的语言)，我们也将迎来与《摩登家庭》(The Jetsons)有几分相似的生活。</p>

<p>原文地址:<a href="http://www.bbc.co.uk/news/technology-21714191">BBC Web-based &#8216;brain&#8217; for robots goes live</a></p>

<h1>小亮观点</h1>

<p>正如米歇尔·沃尔德罗普《复杂——诞生于秩序与混沌边缘的科学》一书中说的那样,生命的诞生,不是上帝的安排,而是与周围的环境不断地互相作用的结果,这个环境可能是无生命的环境,亦或是充满其他生命的环境.<br/>
生命的根本是<strong>进化</strong>-<strong>彼此适应</strong>.<br/>
而这则新闻我看到了这种进化的可能性.<br/>
可是,当这种进化,到了何种的地步,才算是人工智能呢? 如果仅仅是写了一个小程序,按照人事先设置的条件去响应用户,就像siri做的那样,这算是人工智能吗?<br/>
如果可以模拟一个蚂蚁的群体,这算是人工智能吗?如果可以模拟一个小狗的行为,那么这是人工智能吗?水熊虫可以算作有智能吗?知了呢?蛇呢?黑猩猩呢?人呢?</p>

<p><em>那么依您之见,何之为人工智能呢?</em></p>
]]></content>
  </entry>
  
</feed>
